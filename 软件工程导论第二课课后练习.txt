2201412052 软件001 鹿文博
1. 瀑布模型和敏捷开发各有什么特点？
       答：瀑布模型核心思想是按工序将问题化简，将功能的实现与设计分开，便于分工协作，即采用结构化的分析与设计方法将逻辑实现与物理实现分开。将软件生命周期划分为制定计划、需求分析、软件设计、程序编写、软件测试和运行维护等六个基本活动，并且规定了它们自上而下、相互衔接的固定次序，如同瀑布流水，逐级下落。
       瀑布模型的特点：
       (1)整个生命周期,有清晰的定义的阶段. 
       (2)前一个阶段完成后,下一个阶段才往下做. 
       (3)任何阶段如果发生错误,立即回到前面发生错误得阶段,进行修正工作. 
       (4)每一阶段完成后,皆会有严谨的文件产生. 
       (5)使用者只有在调查,需求分析及测试三个阶段参与.
       瀑布模型是线性的,封闭不透明的开发模式,在开发过程中客户只能通过文档来了解产品,最大的弊端是下游工作的开展严重依赖于上游的交付完成情况,造成了严重的人力资源浪费。
 ————————————————
　    敏捷开发（Agile）是一种以人为核心、迭代、循序渐进的开发方法。在敏捷开发中，软件项目的构建被切分成多个子项目，各个子项目的成果都经过测试，具备集成和可运行的特征。简单地来说，敏捷开发并不追求前期完美的设计、完美编码，而是力求在很短的周期内开发出产品的核心功能，尽早发布出可用的版本。然后在后续的生产周期内，按照新需求不断迭代升级，完善产品。
　　敏捷软件开发特点：
　　（1）首要任务是尽早地、持续地交付可评价的软件，以使客户满意。
　　（2）乐于接受需求变更，即使在开发后期也是如此。敏捷软件开发能够驾驭需求的变化，从 而为客户赢得竞争优势。
　　（3）频繁交付可使用的软件，交付的间隔越短越好，可以从几个月缩减到几个星期。
　　（4）在整个项目开发期间，业务人员和开发人员必须朝夕工作在一起。
　　（5）围绕那些有推动力的人们来构建项目，给予他们所需的环境和支持，并且相信他们能够把工作做好。
　　（6）开发团队及在开发团队内部进行最快速、有效的传递信息的方法是面对面交谈。
　　（7）可使用的软件是进度的主要衡量指标。
　　（8）提倡可持续发展。出资人、开发人员及使用者应该共同维持稳定的开发速度。
　　（9）为了增强敏捷能力，应持续关注技术上的杰出成果和良好的设计。
　　（10）简洁，最小化那些没有必要投入的工作量是至关重要的。
　　（11）最好的架构、需求和设计都源于自我组织的团队。
　　（12）团队定期反思如何变得更有战斗力，然后相应地转变井调整其行为。
————————————————
2. 选取XP实践中的两个方法，说说这两种方法的定义和使用场景。
答：（1）每周40小时工作制（40-hour Week）
定义：长时间地持续工作会扼杀工作绩效，疲劳的开发人员会犯更多错误。XP将按正常的每周40小时工作时间表来进行工作。
使用场景：
       Kent Beck 说他希望“...每天早晨都感到有活力有激情，每天晚上都感到疲惫而满足。”一周 40 小时工作可以让您做到这一点。确切的小时数并不重要，重要的是原则。长时间地持续工作会扼杀工作绩效。疲劳的开发人员会犯更多错误，从长期来说，将比按“正常”时间表进行的开发慢得多。
       即使开发人员可以在长时间很好工作，这也不意味着他们应该这样。最终他们会厌倦，会离开他们的工作，或者产生影响他们工作绩效的非工作问题。如果您打乱了人们的生活，将会尝到它所带来的恶果。加班并不是解决项目问题的答案。实际上，它是更大问题的症状。如果您要走向灭亡，就无药可救了。

（2）编码标准（Code Standards）
定义：目标不是创建一个事无巨细的规则列表，而是将能够确保您的代码可以清晰进行交流。
使用场景：
拥有编码标准有两个目的：
a防止团队被一些例如事物没有以最大速度发展这种无关紧要的愚蠢争论搞得不知所措。
b它支持其它方法。
       如果没有编码标准，重新划分代码会更加困难，按应当的频度交换对更困难，快速前进也更困难。目标应该是团队中没有人辨认得出是谁写的哪一部分代码。以团队为单位对某一标准达成协议，然后遵守这一标准。目标不是创建一个事无巨细的规则列表，而是提供将确保您的代码可以清晰交流的指导方针。编码标准开始时应该很简单，然后根据团队经验逐步进化。不要预先花费太多时间。创建能够工作的最简单标准，然后逐步发展。

